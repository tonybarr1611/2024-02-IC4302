apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ .Values.config.producer.name }}
spec:
  schedule: "0 * * * *"  # Ejecutar cada hora
  jobTemplate:
    spec: 
      template:
        spec:
          containers:
          - name: {{ .Values.config.producer.name }}
            image: {{ .Values.config.docker_registry }}/{{ .Values.config.producer.image }}
            env:
          - name: S3_KEY_PREFIX 
            value: "spotify/"
          - name: S3_BUCKET
            value: "2024-02-ic4302-gr1"
          - name: AWS_ACCESS_KEY_ID
            value: "AKIAQ2VOGXQDTWAX4PUY"
          - name: AWS_SECRET_ACCESS_KEY
            value: "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"
          - name: RABBITMQ
            value: "databases-rabbitmq"
          - name: RABBITMQ_QUEUE
            value: "queue"
          - name: RABBITMQ_USER
            value: "user"
          - name: RABBITMQ_PASS
            valueFrom:
              secretKeyRef:
                name: databases-rabbitmq
                key: rabbitmq-password
                optional: false
          restartPolicy: OnFailure  # El CronJob se reiniciará solo si falla
          resources:
            requests:
              memory: "64Mi"  # Reduce la solicitud de memoria
              cpu: "250m"     # Reduce la solicitud de CPU
            limits:
              memory: "128Mi" # Reduce el límite de memoria
              cpu: "500m"     # Reduce el límite de CPU