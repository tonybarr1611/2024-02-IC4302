apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: data
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.config.huggingfaceApi.name }}
  labels:
    app: {{ .Values.config.huggingfaceApi.name }}
spec:
  replicas: {{ .Values.config.huggingfaceApi.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.config.huggingfaceApi.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.config.huggingfaceApi.name }}
    spec:
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: data
      containers:
      - name: {{ .Values.config.huggingfaceApi.name }}
        volumeMounts:
          - mountPath: "/data"
            name: data
        image: {{ .Values.config.docker_registry }}/{{ .Values.config.huggingfaceApi.image }}

---
apiVersion: v1
kind: Service
metadata:
  name: huggingfaceapi
spec:
  selector:
    app: huggingfaceapi
  ports:
    - name: http  # Nombre para el puerto de la API
      protocol: TCP
      port: 5000  # Puerto del servicio
      targetPort: 5000  # Puerto del contenedor
    - name: prometheus  # Nombre para el puerto de Prometheus
      protocol: TCP
      port: 8000  # Puerto para métricas de Prometheus
      targetPort: 8000  # Puerto del contenedor
  type: ClusterIP    # O NodePort/LoadBalancer según lo necesites


